syntax = "proto3";

// BossStatus: 보스에 대한 정보를 나타내는 메시지
message BossStatus {
  int32 BossId = 1;      // 보스 식별 ID
  int32 BossModel = 2;   // 보스 모델 ID
  string BossName = 3;   // 보스 이름
  float BossHp = 4;      // 보스 체력
}

// C_BossSpawn: 보스 소환 요청 메시지 (클라이언트 -> 서버)
message C_BossSpawn {
  repeated BossStatus boss = 1; // 보스 정보
}

// S_BossSpawn: 보스 소환 결과 메시지 (서버 -> 클라이언트)
message S_BossSpawn {
  repeated BossStatus boss = 1; // 보스 정보
}

// C_TargetPlayer: 보스의 타겟 플레이어 설정 요청 메시지 (클라이언트 -> 서버)
message C_TargetPlayer {
  int32 BossId = 1;              // 보스 식별 ID
  repeated int32 playerId = 2;   // 유저 식별 IDs
}

// S_TargetPlayer: 보스의 타겟 플레이어 설정 결과 메시지 (서버 -> 클라이언트)
message S_TargetPlayer {
  int32 BossId = 1;              // 보스 식별 ID
  repeated int32 playerId = 2;   // 유저 식별 IDs
}

// BossActionSet: 보스의 액션 설정
message BossActionSet {
  int32 animCode = 1;    // 몬스터 액션 식별 ID
  int32 effectCode = 2;  // 이펙트 식별 ID
  string msg = 3;        // 경고문
}

// C_ActionBoss: 보스 액션 요청 메시지 (클라이언트 -> 서버)
message C_ActionBoss {
  int32 actionnBossId = 1;  // 보스 액션 식별 ID
  BossActionSet actionSet = 2;  // 액션셋
}

// S_ActionBoss: 보스 액션 결과 메시지 (서버 -> 클라이언트)
message S_ActionBoss {
  int32 actionBossId = 1;  // 보스 액션 식별 ID
  BossActionSet actionSet = 2;  // 액션셋
}

// S_Phase: 보스 전투의 진행 단계 (서버 -> 클라이언트)
message S_Phase {
  int32 phase = 1;   // 페이즈 단계 (단계별 전투 변화)
}
